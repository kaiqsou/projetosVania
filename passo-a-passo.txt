iniciar projeto sem a node_modules:
	npm install <pacotes>
	npm start

PASSO-A-PASSO DO PROJETO

	npm init -y
	npm install <pacote>   (BACKEND)
	- express
	- cors
	- mongoose
	- argon2

adicionar "type": "module", abaixo do "main" no package.json
	$ npm install nodemon --save-dev

adicionar "start": "nodemon ./index.js localhost 5000" no package.json

CRIAR ARQUIVOS

DENTRO DA BACKEND
	- pasta <db>
	- pasta <controllers>
	- pasta <models>
	- pasta <routes>
	- arquivo <index.js>

DENTRO DA DB 
	- arquivo <conn.js>

DENTRO DA ROUTES

	- pasta <users>

DENTRO DA MODELS
	- arquivo <user.js>

fazer os imports no index.js
	import express from "express";
	import cors from "cors";

criar arquivo de rota <route.js> dentro da pasta backend
	- importar o módulo de rota do express
	- exportar a rota

criar arquivo <UserController.js> dentro da pasta de controllers
	- fazer a classe default do UserController no UserController.js
	- importar o UserController no arquivo <route.js>

importar o mongoose no arquivo <User.js>

criar o esquema no <User.js>, junto ao export da model User

importar o model User no <UserController.js>

importar o moongose no conn.js e fazer a conexão

exportar o moongose no <conn.js>

ir até o <User.js> e importar o moongose diretamente do DB

importar a rota no <index.js>

configurar login e register no UserController.js

importar argon2 no UserController.js para usar da criptografia

// ------------------------------------------------------------------- //

executar o comando dentro da pasta do projeto e fora do backend
npx create-react-app frontend (deve ser minúsculo)
	npx é uma ferramenta do node que executa pacotes do npm sem a necessidade de instalar globalmente

iniciar o projeto
	npm start

instalar os pacotes:	(FRONTEND)
	axios - conexão com a api
	events - mensageira
	react-icons - icones
	react-router-dom - mapeamento de páginas

criar as pastas em src:
	components (compartilhamento de arquivos entre páginas, como header e footer)
	utils
	context
	hooks
	pages

criar o arquivo em src:
	routes.jsx

criar na pasta Components:
	Container
	Footer
	Header
	Form

criar index.jsx e colocar o arquivo css para cada uma das pastas acima

o nome "x.module.css" faz com que não haja interferencia do css em algum outro componente, se tornando específico para onde está

index.css é um css Global, que se aplica a todos os componentes.

criar na pasta pages:
	pasta auth

criar na pasta auth:
	pasta register, home e login

criar na pasta Form:
	input.jsx

criar na pasta hooks:
	useAuth.jsx
	useFlashMessage.jsx

criar na pasta utils:
	api.jsx
	bus.jsx

criar na pasta context:
	UserContext.jsx

criar na pasta Components:
	pasta message

criar na pasta Components/message:
	index.jsx
	Message.module.css
	

